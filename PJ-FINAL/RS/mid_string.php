<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}
include './config/connect_database.php';

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if (!isset($_SESSION['id'])) {
    header("Location: splash.php");
    exit();
}

$user_id = $_SESSION['id'];

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏ï‡∏±‡πâ‡∏á PIN ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
$sql = "SELECT pin_code FROM patients_login WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $user_id);
$stmt->execute();
$result = $stmt->get_result();
$row = $result->fetch_assoc();

// ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ PIN ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ set_pin.php
if ($row && empty($row['pin_code'])) {
    header("Location: set_pin.php");
    exit();
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô PIN ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
if (!isset($_SESSION['pin_verified'])) {
    header("Location: enter_pin.php");
    exit();
}


// ‡∏î‡∏∂‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
$sql = "SELECT profile_picture FROM patients_login WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $user_id);  // ‡πÉ‡∏ä‡πâ user_id ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
$stmt->execute();
$result = $stmt->get_result();
$row = $result->fetch_assoc();

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if ($row && !empty($row['profile_picture'])) {
    $profile_picture = $row['profile_picture']; // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• BLOB ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
    // ‡πÅ‡∏õ‡∏•‡∏á BLOB ‡πÄ‡∏õ‡πá‡∏ô base64 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô img tag
    $profile_image = 'data:image/jpeg;base64,' . base64_encode($profile_picture);
} else {
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏û‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    $profile_image = 'assets/img/user.jpg';
}

?>



<!DOCTYPE html>
<html lang="th">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- CSS Frameworks & Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

    <link rel="stylesheet" href="assets/css/style_header.css" />


    <script>
        document.addEventListener("scroll", function() {
            const header = document.querySelector(".custom-header");
            if (window.scrollY > 50) {
                header.classList.add("scrolling");
            } else {
                header.classList.remove("scrolling");
            }
        });
    </script>
</head>

<body>

    <div id="splash-screen">
        <img id="splash-logo" src="assets/img/logo_clinic.png" alt="Splash Logo" />
        <div class="loading-text">Loading...</div>
    </div>


    <div class="custom-navbar"></div>

    <header class="custom-header">
        <img src="assets/img/logo_banner3.png" alt="Logo" class="logo">

        <!-- Desktop Navigation -->
        <nav class="desktop-nav">
            <ul>
                <li><a href="home_page.php">‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</a></li>
                <li><a href="main-menu.php">‡πÄ‡∏°‡∏ô‡∏π</a></li>
                <li><a href="contact.php">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£</a></li>
                <li><a href="setting.php">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</a></li>
            </ul>
        </nav>

        <!-- Mobile Icons -->
        <div class="mobile-icons">
            <div class="custom-notification-bell" id="custom-notificationBell">
                <i class="bx bx-bell"></i>
                <div class="custom-notification-count" id="custom-notificationCount">0</div>
            </div>

            <a href="medical_history.php">
                <img id="profileImage"
                    src="<?php echo isset($profile_image) && !empty($profile_image) ? $profile_image : 'assets/img/user.jpg'; ?>"
                    alt="Profile Picture" class="custom-nav__img" />
            </a>



    </header>

    <!-- Mobile Bottom Navigation -->
    <nav class="mobile-nav">
        <ul>
            <li><a href="home_page.php"><i class='bx bx-home-alt custom-nav__icon'></i><span>‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</span></a></li>
            <li><a href="main-menu.php"><i class='bx bx-list-ul custom-nav__icon'></i><span>‡πÄ‡∏°‡∏ô‡∏π</span></a></li>
            <li><a href="contact.php"><i class='bx bx-message-square-detail custom-nav__icon'></i><span>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£</span></a></li>
            <li><a href="setting.php"><img id="iconPreview" class="custom-nav__icon" src="assets/icons/settings-icon.svg" alt="icon"><span>‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</span></a></li>
        </ul>
    </nav>


    <main>

    </main>


    <!-- ‡πÇ‡∏´‡∏•‡∏î Bootstrap JS (‡πÅ‡∏•‡∏∞ Popper.js ‡∏´‡∏≤‡∏Å‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô) -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>



    <script type="module">
        import {
            initializeApp
        } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
        import {
            getMessaging,
            getToken,
            onMessage
        } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-messaging.js";

        const firebaseConfig = {
            apiKey: "AIzaSyBcXtu7HGC2eHOaEH8msEBqomBpZ95mXi4",
            authDomain: "ent-center-notification.firebaseapp.com",
            projectId: "ent-center-notification",
            storageBucket: "ent-center-notification.firebasestorage.app",
            messagingSenderId: "381805619576",
            appId: "1:381805619576:web:88fdda76279981230cc08d",
            measurementId: "G-HQJV0L42N6"
        };

        // ‚úÖ Initialize Firebase
        const app = initializeApp(firebaseConfig);
        const messaging = getMessaging(app);

        // ‚úÖ ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô Service Worker (‡πÉ‡∏ä‡πâ sw.js)
        if ("serviceWorker" in navigator) {
            navigator.serviceWorker.register("sw.js")
                .then((registration) => {
                    console.log("‚úÖ Service Worker ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", registration);

                    // ‚úÖ ‡∏Ç‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô Service Worker ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                    return Notification.requestPermission().then(permission => {
                        if (permission === "granted") {
                            console.log("‚úÖ Notification permission granted.");
                            return getToken(messaging, {
                                vapidKey: "BFbqo6UXBNRAOvtgVHtcAZI0ualTGix62IWkZYp1_NsqIS5g6KkmBFc9wttLWX0a3fD5Vgt-LMuwBlmJK4nvaRY",
                                serviceWorkerRegistration: registration // ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ sw.js
                            });
                        } else {
                            console.log("‚ùå Notification permission denied.");
                            return null;
                        }
                    });
                })
                .then(token => {
                    if (token) {
                        console.log("üî• FCM Token:", token);
                        saveTokenToDatabase(token); // ‡∏™‡πà‡∏á Token ‡πÑ‡∏õ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                    } else {
                        console.warn("‚ö†Ô∏è No FCM Token received.");
                    }
                })
                .catch(error => {
                    console.error("‚ùå Error:", error);
                });
        } else {
            console.warn("‚ö†Ô∏è Browser ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Service Worker!");
        }

        // ‚úÖ ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏ì‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
        onMessage(messaging, (payload) => {
            console.log("üì© Message received:", payload);
            new Notification(payload.notification.title, {
                body: payload.notification.body,
                icon: payload.notification.icon
            });
        });

        // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Token ‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        function saveTokenToDatabase(token) {
            fetch("./config/save_fcm_token.php", {
                    method: "POST",
                    body: JSON.stringify({
                        fcm_token: token
                    }),
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                .then(response => response.text()) // ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô text ‡∏Å‡πà‡∏≠‡∏ô
                .then(text => {
                    try {
                        console.log("üìù Raw Response:", text); // ‚úÖ Debug ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ
                        const data = JSON.parse(text); // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô JSON
                        console.log("‚úÖ Token saved:", data);
                    } catch (error) {
                        console.error("‚ùå JSON Parse Error:", text);
                    }
                })
                .catch(error => console.error("‚ùå Error saving token:", error));
        }
    </script>

    <script>
        function hideSplashScreen() {
            console.log("üî• hideSplashScreen() ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß");

            const splashScreen = document.getElementById("splash-screen");
            const mainContent = document.querySelector("main"); // ‡πÉ‡∏ä‡πâ‡πÅ‡∏ó‡πá‡∏Å <main> ‡πÅ‡∏ó‡∏ô

            if (!splashScreen) {
                console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ Splash Screen ‡πÉ‡∏ô DOM");
                return;
            }

            splashScreen.style.opacity = "0";
            setTimeout(() => {
                splashScreen.style.display = "none";
                if (mainContent) {
                    mainContent.style.display = "block"; // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å
                }
            }, 500);
        }

        // ‡∏ã‡πà‡∏≠‡∏ô Splash Screen ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à
        window.onload = hideSplashScreen;
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            let currentPage = window.location.pathname.split("/").pop(); // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å URL
            let menuItems = document.querySelectorAll(".desktop-nav ul li a, .mobile-nav ul li a");

            menuItems.forEach(item => {
                if (item.getAttribute("href") === currentPage) {
                    item.parentElement.classList.add("active");
                }
            });
        });
    </script>


    <script>
        document.addEventListener("DOMContentLoaded", function() {
            checkAppointments(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å

            var notificationBell = document.getElementById("custom-notificationBell");
            var notificationCount = document.getElementById("custom-notificationCount");

            // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
            function updateNotificationCount(count) {
                if (notificationCount) {
                    notificationCount.textContent = count;
                    if (count > 0) {
                        notificationCount.style.visibility = 'visible'; // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡πâ‡∏≤‡∏¢‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                        notificationBell.classList.add('shake'); // ‡∏Å‡∏£‡∏∞‡∏î‡∏¥‡πà‡∏á‡∏à‡∏∞‡∏™‡∏±‡πà‡∏ô
                        notificationCount.classList.add('shake'); // ‡∏õ‡πâ‡∏≤‡∏¢‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡∏™‡∏±‡πà‡∏ô
                    } else {
                        notificationCount.style.visibility = 'hidden'; // ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡πâ‡∏≤‡∏¢‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                        notificationBell.classList.remove('shake'); // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏∞‡∏î‡∏¥‡πà‡∏á
                        notificationCount.classList.remove('shake'); // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏õ‡πâ‡∏≤‡∏¢‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                    }
                }
            }

            // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢
            function checkAppointments() {
                fetch("./config/check_appointments.php")
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === "success") {
                            updateNotificationCount(data.unread_count);
                        }
                    })
                    .catch(error => console.error("Error checking appointments:", error));
            }

            // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏∞‡∏î‡∏¥‡πà‡∏á, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô
            notificationBell.addEventListener('click', function() {
                fetch("./config/check_appointments.php")
                    .then(response => response.json())
                    .then(data => {
                        console.log("Received data:", data);

                        if (data.status === "success" && Array.isArray(data.appointments) && data.appointments.length > 0) {
                            showAppointmentModal(data.appointments);
                        } else {
                            showNoNotificationModal();
                        }
                    })
                    .catch(error => console.error("Error fetching appointments:", error));
            });

            function removeExistingModal() {
                document.querySelectorAll(".modal").forEach(modal => modal.remove());
            }

            function showAppointmentModal(appointments) {
                removeExistingModal();

                let modalContent = `
        <div class="modal fade" id="appointmentModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">`;

                appointments.forEach(appointment => {
                    modalContent += `
                <p><strong>‡∏£‡∏´‡∏±‡∏™:</strong> ${appointment.appointment_id}</p>
                <p><strong>‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢:</strong> ${appointment.appointment_date}</p>
                <hr/>`;
                });

                modalContent += `
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="markAsReadButton" data-bs-dismiss="modal">‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß</button>
            </div>
        </div>
    </div>
</div>`;

                document.body.insertAdjacentHTML("beforeend", modalContent);
                const modal = new bootstrap.Modal(document.getElementById("appointmentModal"));
                modal.show();

                document.getElementById("markAsReadButton").addEventListener("click", function() {
                    markNotificationsAsRead();
                });
            }

            function showNoNotificationModal() {
                removeExistingModal();

                const modalContent = `
        <div class="modal fade" id="noNotificationModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">‡∏õ‡∏¥‡∏î</button>
                    </div>
                </div>
            </div>
        </div>`;

                document.body.insertAdjacentHTML("beforeend", modalContent);
                new bootstrap.Modal(document.getElementById("noNotificationModal")).show();
            }

            function markNotificationsAsRead() {
                fetch("./config/update_notification_status.php", {
                        method: "POST",
                        body: JSON.stringify({
                            is_read: 1
                        }),
                        headers: {
                            "Content-Type": "application/json"
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        console.log("Notification status updated:", data);
                        updateNotificationCount(0);
                        checkAppointments();
                    })
                    .catch(error => console.error("Error updating notification status:", error));
            }

            document.addEventListener("visibilitychange", function() {
                if (document.visibilityState === "visible") {
                    checkAppointments();
                }
            });
        });
    </script>


    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var profileImageElement = document.getElementById("profileImage");

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ element ‡∏ó‡∏µ‡πà‡∏°‡∏µ id="profileImage" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (profileImageElement) {
                var profileImageUrl = "<?php echo $profile_image ? $profile_image : 'assets/img/user.jpg'; ?>";

                // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
                if (profileImageUrl && profileImageUrl.trim() !== "") {
                    profileImageElement.src = profileImageUrl;
                } else {
                    profileImageElement.src = 'assets/img/user.jpg'; // fallback image
                }
            } else {
                console.error("Element with id 'profileImage' not found.");
            }
        });
    </script>


</body>

</html>